
package graphicInterface;

import globalclasses.Message;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import interfaces.UIWindow;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_CANCEL_OPTION;


public class MeetingWindow extends UIWindow{
    private static final long serialVersionUID = 1L;
	
    private UIClient client;
    private String meeting;
    private ArrayList<Object> par;
    private int closed;
    private String id;
    /**
     * Creates new form MeetingWindow
     * @param client
     * @param meeting
     */
    public MeetingWindow(UIClient client, String meeting) {
        initComponents();
        client.lastWindow().setVisible(true);
        this.setLocationRelativeTo(client.lastWindow());
        client.lastWindow().setVisible(false);
        this.setTitle(client.getUsername());
        
        this.client = client;
        this.client.addWindow(this);
        this.meeting = meeting;
        closed = 0;
        
        loadData();
        this.client.setChat(null, id, -1);
        par = new ArrayList<Object>();
        par.add(id);
        Message result = client.sendTCP(20,par);
        switch(result.getResult()) {
            case -1: //not invited
                this.closeBtn.setEnabled(false);
                this.inviteBtn.setEnabled(false);
                this.addItemBtn.setEnabled(false);
                break;
            case 1: //invited
                this.closeBtn.setEnabled(false);
                break;
            case 2: //creator
                break;
            default:
                JOptionPane.showMessageDialog(null, "There was a problem performing this operation", "Error",JOptionPane.ERROR_MESSAGE);
        }
        updateClosed();
    }
    
    @Override
    public void setClosed(int closed) {
        this.closed = closed;
        updateClosed();
    }
    
    private void updateClosed() {
        switch(closed) {
            case 1:
                this.closeBtn.setText("Close Meeting");
                this.inviteBtn.setEnabled(false);
                this.addItemBtn.setText("Add action item");
                break;
            case 2:
                this.closeBtn.setEnabled(false);
                this.inviteBtn.setEnabled(false);
                this.addItemBtn.setEnabled(false);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        titleLbl = new javax.swing.JLabel();
        seeAgendaBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        Location = new javax.swing.JTextField();
        dataLabel3 = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        alias = new javax.swing.JTextField();
        dataLabel1 = new javax.swing.JLabel();
        resultsBtn = new javax.swing.JButton();
        inviteBtn = new javax.swing.JButton();
        addItemBtn = new javax.swing.JButton();
        seeUsersBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        creatorLbl = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("Meeting Title");

        seeAgendaBtn.setText("See Agenda");
        seeAgendaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeAgendaBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close Agenda");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Desired Outcome");

        description.setEditable(false);
        description.setBackground(new java.awt.Color(240, 240, 240));
        description.setColumns(20);
        description.setLineWrap(true);
        description.setRows(2);
        description.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        description.setFocusable(false);
        jScrollPane1.setViewportView(description);

        Location.setEditable(false);

        dataLabel3.setText("Location");

        dataLabel.setText("Date/Time");

        date.setEditable(false);

        alias.setEditable(false);

        dataLabel1.setText("Alias");

        resultsBtn.setText("See Results");
        resultsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsBtnActionPerformed(evt);
            }
        });

        inviteBtn.setText("Invite User");
        inviteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviteBtnActionPerformed(evt);
            }
        });

        addItemBtn.setText("Add Agenda Item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        seeUsersBtn.setText("See Users");
        seeUsersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeUsersBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Creator");

        creatorLbl.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(dataLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(Location, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dataLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(dataLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(creatorLbl)))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seeAgendaBtn)
                            .addComponent(resultsBtn))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(addItemBtn)
                            .addComponent(closeBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(seeUsersBtn)
                            .addComponent(inviteBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataLabel1)
                    .addComponent(jLabel1)
                    .addComponent(creatorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataLabel3)
                            .addComponent(Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seeAgendaBtn)
                    .addComponent(closeBtn)
                    .addComponent(seeUsersBtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addItemBtn)
                            .addComponent(resultsBtn)
                            .addComponent(inviteBtn))
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backBtn))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        leave();
    }//GEN-LAST:event_backBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        par = new ArrayList<Object>();
        par.add(id);
        if (closed == 0) {
            Message result = client.sendTCP(24,par);
            switch(result.getResult()) {
                case -2:
                    JOptionPane.showMessageDialog(null,"Meeting has been closed", "Error",JOptionPane.ERROR_MESSAGE);
                    closed = 2;
                    break;
                case -1:
                    JOptionPane.showMessageDialog(null, result.toString(), "Error",JOptionPane.ERROR_MESSAGE);
                    this.closeBtn.setEnabled(false);
                    break;
                case 1:
                    JOptionPane.showMessageDialog(null, "Meeting agenda successfully closed", "Success",JOptionPane.INFORMATION_MESSAGE);
                    closed = 1;
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "There was a problem performing this operation", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            Message result = client.sendTCP(29,par);
            switch(result.getResult()) {
                case -2:
                    JOptionPane.showMessageDialog(null,"Please close agenda first", "Error",JOptionPane.ERROR_MESSAGE);
                    closed = 1;
                    break;
                case -1:
                    JOptionPane.showMessageDialog(null, "You don't have permission to do that.", "Error",JOptionPane.ERROR_MESSAGE);
                    this.closeBtn.setEnabled(false);
                    break;
                case 1:
                    JOptionPane.showMessageDialog(null, "Meeting successfully closed", "Success",JOptionPane.INFORMATION_MESSAGE);
                    closed = 2;
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "There was a problem performing this operation", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        updateClosed();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void resultsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsBtnActionPerformed
        String[] opt = {"Action Items", "KeyDecisions", "Cancel"};
        int res = JOptionPane.showOptionDialog(null, "What type of results?", "Results", YES_NO_CANCEL_OPTION, QUESTION_MESSAGE, null, opt, null);
        par = new ArrayList<Object>();
        par.add(res);
        par.add(id);
        Message result = client.sendTCP(25, par);
        if (result.getResult()!=1) {
            JOptionPane.showMessageDialog(null, "Nothing found", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] resultshere = result.toString().split("\n");
        new PickFromList(res+4, resultshere, client, id,closed);
        this.setVisible(false);
    }//GEN-LAST:event_resultsBtnActionPerformed

    private void seeAgendaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeAgendaBtnActionPerformed
        par = new ArrayList<Object>();
        par.add(id);
        Message result = client.sendTCP(22,par);
        if (result.getResult()<0) {
            JOptionPane.showMessageDialog(null, "Nothing found", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] resultshere = result.toString().split("\n");
        new PickFromList(3, resultshere, client, id,closed);
        this.setVisible(false);
    }//GEN-LAST:event_seeAgendaBtnActionPerformed

    private void inviteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviteBtnActionPerformed
        new SelectUser(client);
        this.setVisible(false);
    }//GEN-LAST:event_inviteBtnActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        if (closed == 0) {
            new AddAgenda(client,id);
        }
        else {
            new AddAction(client,id);
        }
        this.setVisible(false);
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void seeUsersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeUsersBtnActionPerformed
        par = new ArrayList<Object>();
        par.add(id);
        Message result = client.sendTCP(36, par);
        if (result.getResult()<0) {
            JOptionPane.showMessageDialog(null, "Nothing found", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] meets = result.toString().split("\n");
        new PickFromList(7, meets, client, id,closed);
        this.setVisible(false);
    }//GEN-LAST:event_seeUsersBtnActionPerformed

    private void leave() {
        client.setChat(null,"",-1);
        UIWindow previous = client.removeWindow();
        previous.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }
    
    private void loadData() {
        int index = 0;
        String[] data = meeting.split("\t");
        if (data[0].equals("0")||data[0].equals("-1")||data[0].equals("1")) {
            index++;
        }
        this.id = data[index].trim();
        this.alias.setText(data[index++].trim());
        this.titleLbl.setText(data[index++]);
        this.description.setText(data[index++]);
        this.Location.setText(data[index++]);
        this.date.setText(data[index++]);
        this.creatorLbl.setText(data[index++]);
        
        if (data.length>index) {
            String cmp = data[data.length-1].trim();
            if (cmp.equals("Closed"))
                this.closed = 1;
            else if (cmp.equals("Ended"))
                this.closed = 2;
        }
        else this.resultsBtn.setVisible(false);
        
        this.setVisible(true);
    }

    public void setUser(String user) {
        par = new ArrayList<Object>();
        par.add(user);
        par.add(id);
        Message result = client.sendTCP(21,par);
        if(result.getResult()>=0)
            JOptionPane.showMessageDialog(null, "User invited to this meeting", "Success",JOptionPane.INFORMATION_MESSAGE);
        else
            JOptionPane.showMessageDialog(null, "There was a problem performing this operation", "Error",JOptionPane.ERROR_MESSAGE);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Location;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JTextField alias;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextField creatorLbl;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JLabel dataLabel1;
    private javax.swing.JLabel dataLabel3;
    private javax.swing.JTextField date;
    private javax.swing.JTextArea description;
    private javax.swing.JButton inviteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resultsBtn;
    private javax.swing.JButton seeAgendaBtn;
    private javax.swing.JButton seeUsersBtn;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
