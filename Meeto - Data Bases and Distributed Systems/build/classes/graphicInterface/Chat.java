package graphicInterface;

import globalclasses.Message;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import interfaces.UIWindow;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Rosa
 */
public class Chat extends UIWindow {
    private static final long serialVersionUID = 1L;
    private final UIClient client;
    private final String meetingID;
    private final int itemID;
    /**
     * Creates new form Chat
     * @param client
     * @param meetingID
     * @param itemID
     * @param dump
     */
    public Chat(UIClient client, String meetingID, int itemID, String dump, int closed) {
        initComponents();
        client.lastWindow().setVisible(true);
        this.setLocationRelativeTo(client.lastWindow());
        client.lastWindow().setVisible(false);
        this.setTitle(client.getUsername());
        
        this.meetingID = meetingID;
        this.itemID = itemID;
        this.client = client;
        
        this.client.addWindow(this);
        this.client.setChat(this, meetingID, itemID);
        this.setVisible(true);
        
        this.outTxt.setText(dump);
        if (closed==1) {
            this.inTxt.addKeyListener(new KeyListener(){
                @Override
                public void keyPressed(KeyEvent e){
                    if(e.getKeyCode() == KeyEvent.VK_ENTER){
                        e.consume();
                        sendMsg();
                    }
                }

                @Override
                public void keyTyped(KeyEvent e) {
                }

                @Override
                public void keyReleased(KeyEvent e) {
                }
            });
        }
        else {
            this.inTxt.setEnabled(false);
            this.sendBtn.setEnabled(false);
        }
    }
    
    @Override
    public void setClosed(int closed) {
        JOptionPane.showMessageDialog(null, "Meeting has been closed", "Information",JOptionPane.INFORMATION_MESSAGE);
        this.inTxt.setEnabled(false);
        this.inTxt.setText("");
        this.sendBtn.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outTxt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        inTxt = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        outTxt.setColumns(20);
        outTxt.setLineWrap(true);
        outTxt.setRows(5);
        outTxt.setEnabled(false);
        jScrollPane1.setViewportView(outTxt);

        inTxt.setColumns(20);
        inTxt.setLineWrap(true);
        inTxt.setRows(2);
        inTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inTxtKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(inTxt);

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sendBtn)
                            .addComponent(backBtn))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        sendMsg();
    }//GEN-LAST:event_sendBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        leave();
    }//GEN-LAST:event_backBtnActionPerformed

    private void inTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inTxtKeyTyped
        if (this.inTxt.getText().length()>Global.TEXTLEN) {
            this.inTxt.setText(this.inTxt.getText().substring(0,Global.TEXTLEN));
        }
    }//GEN-LAST:event_inTxtKeyTyped

    private void leave() {
        JFrame prev = client.removeWindow();
        prev.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }
    
    private void sendMsg() {
        String msg = this.inTxt.getText();
        ArrayList<Object> par = new ArrayList<Object>();
        par.add(meetingID);
        par.add(itemID);
        par.add(msg);
        Message result = client.sendTCP(30, par);
        if(result.getResult()==1)
            this.inTxt.setText("");
        else 
            JOptionPane.showMessageDialog(null, "There was a problem performing this operation", "Error",JOptionPane.ERROR_MESSAGE);
    }
    
    public void printMsg(String text) {
        this.outTxt.append(text+"\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextArea inTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outTxt;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables
}
