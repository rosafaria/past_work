package bib;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;

/** Classe de interface gráfica para escolher um item de uma lista.
 * @author André Baptista (2012137523)
 * @author Rosa Faria (2005128014)
 */
public class PickFromList extends javax.swing.JFrame {
	private Object[] objectos;
	private final Utilizador user;
	private DefaultListModel model;
	private ArrayList<ArrayList> dados;
	 
	/** Cria nova janela PickFromList.
	 * <p> Adiciona os items ao modelo da JList e inicia o Mouse Listener 
	 * que detecta se foi feito double-click para seleccionar um item
	 * @param objectos items a adicionar à lista
	 * @param user Utilizador ligado ao sistema
	 * @param dados Dados da biblioteca
	 */
	
	public PickFromList(Object[] objectos, Utilizador user, ArrayList<ArrayList> dados) {
		initComponents();		
		this.setIconImage(new ImageIcon(getClass().getResource("/bib/resources/Logo.gif")).getImage());
		this.setLocationRelativeTo(null);
		this.objectos = objectos;
		this.user = user;
		this.dados = dados;
		setModel();
		addMouseListener();
	}
	
	private void setModel() {
		model = new DefaultListModel();
		if ((user instanceof Leitor)&&(objectos[0] instanceof Utilizador)) {
			if (objectos[0] instanceof Leitor) {
				model.addElement(user);
				Object[] temp = new Object[1];
				temp[0] = user;
				objectos = temp;
			}//se for um user só pode ver os seus próprios dados
		}
		else {
			for (Object objecto : objectos) {
				model.addElement(objecto.toString());
			}
		}
		this.jList1.setModel(model);
		
	}
	
	private void addMouseListener() {
		/**Fica à espera de um duplo-clique num item da lista para o abrir**/
		jList1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				JList list = (JList)evt.getSource();
				if (evt.getClickCount() == 2) { //duplo-clique -> abrir nova janela
					
					int index = list.locationToIndex(evt.getPoint());
					
					if ((index>=0)&&(index<objectos.length)) {
						if (objectos[index] instanceof Artigo) {
							DisplayArtigo disp;
							disp = new DisplayArtigo((Artigo)objectos[index], user, dados);
							disp.setVisible(true);
							Search.frames.add(disp);
						}
						else if (objectos[index] instanceof Utilizador){
							Display disp;
							disp = new Display((Utilizador)objectos[index], user, dados);
							disp.setVisible(true);
							Search.frames.add(disp);
						}
						else {
							DisplayReq disp;
							disp = new DisplayReq((Requisicao)objectos[index], user, dados);
							disp.setVisible(true);
							Search.frames.add(disp);
						}
					}
				}
			}
		});
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jList1.setBackground(new java.awt.Color(240, 240, 240));
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        setModel(); //fazer refresh quando a janela é seleccionada
    }//GEN-LAST:event_formWindowGainedFocus


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
