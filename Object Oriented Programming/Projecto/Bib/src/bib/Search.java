package bib;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/** Classe de interface gráfica com o menu principal.
 * <p> Permite procurar e adicionar artigos e utilizadores, ver as requisições atrasadas, 
 * ver as estatísticas das requisições e mudar a palavra-passe (consoante as permissões
 * do tipo de utilizador ligado - este só verá as opções que tem autorização para usar)
 * @author André Baptista (2012137523)
 * @author Rosa Faria (2005128014)
 */
public class Search extends javax.swing.JFrame {
	private Utilizador user;
	private ArrayList<ArrayList> dados;
	private Grafico grafico;
	public static ArrayList<JFrame> frames;
	
	/** Cria nova janela Search.
	 * <p> Remove as componentes que o Utilizador não tem permissão para ver e inicializa os dados
	 * @param dados Dados da biblioteca
	 * @param user Utilizador ligado ao sistema
	 */
	public Search(ArrayList<ArrayList> dados, Utilizador user) {
		this.setIconImage(new ImageIcon(getClass().getResource("/bib/resources/Logo.gif")).getImage());
		initComponents();
		this.setLocationRelativeTo(null);
		
		this.frames = new ArrayList<>();
		this.addWindowListener(new WindowAdapter() {
		    @Override
		    public void windowClosing(WindowEvent ev) {
			for(int i=0;i<frames.size();i++){
			    frames.get(i).dispose();
			}
			Main.logwindow.setVisible(true);
		    }
		});
		
		/**Guardar atributos**/
		this.user = user;
		this.dados = dados;
		
		/**Retirar opções consoante permissões**/
		if (user instanceof Leitor) {
			this.requisitadosTab.remove(this.usersTab);
			this.requisitadosTab.remove(this.statsTab);
			this.requisitadosTab.remove(this.reqsTab);
			this.requisitadosTab.remove(this.requisitados);
			this.addArtigo.setVisible(false);
		}
		this.categoriaCheck.setVisible(false);
		this.isAluno.setVisible(false);
		this.isProf.setVisible(false);
		this.mostrarGrafico.setVisible(false);
		this.livroPlus.setVisible(false);
		this.dvdPlus.setVisible(false);
		this.listNone.setVisible(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        requisitadosTab = new javax.swing.JTabbedPane();
        artigosTab = new javax.swing.JPanel();
        isLivro = new javax.swing.JRadioButton();
        isDVD = new javax.swing.JRadioButton();
        isbnLabel = new javax.swing.JLabel();
        anoLabel = new javax.swing.JLabel();
        cotaLabel = new javax.swing.JLabel();
        editoraLabel = new javax.swing.JLabel();
        autoresLabel = new javax.swing.JLabel();
        editora = new javax.swing.JTextField();
        titulo = new javax.swing.JTextField();
        tituloLabel = new javax.swing.JLabel();
        anoPub = new javax.swing.JTextField();
        autores = new javax.swing.JTextField();
        isbn = new javax.swing.JTextField();
        cota = new javax.swing.JTextField();
        procurarArtigo = new javax.swing.JButton();
        addArtigo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        usersTab = new javax.swing.JPanel();
        isAdmin = new javax.swing.JRadioButton();
        isLeitor = new javax.swing.JRadioButton();
        slash1 = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        telefoneLabel = new javax.swing.JLabel();
        moradaLabel = new javax.swing.JLabel();
        categoriaLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        morada = new javax.swing.JTextField();
        telefone = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        categoria = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        nomeLabel = new javax.swing.JLabel();
        ano = new javax.swing.JTextField();
        mes = new javax.swing.JTextField();
        dia = new javax.swing.JTextField();
        slash2 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        categoriaCheck = new javax.swing.JCheckBox();
        procurarUser = new javax.swing.JButton();
        addUser = new javax.swing.JButton();
        isAluno = new javax.swing.JRadioButton();
        isProf = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        passTab = new javax.swing.JPanel();
        oldPass = new javax.swing.JPasswordField();
        newPass = new javax.swing.JPasswordField();
        confirmPass = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mudarPass = new javax.swing.JButton();
        errorLbl = new javax.swing.JLabel();
        reqsTab = new javax.swing.JPanel();
        listaReqs = new javax.swing.JScrollPane();
        atrasadas = new javax.swing.JList();
        requisitados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requisitadosList = new javax.swing.JList();
        statsTab = new javax.swing.JPanel();
        mesStatsLbl = new javax.swing.JLabel();
        mesStats = new javax.swing.JTextField();
        mesLabel = new javax.swing.JLabel();
        mediaLabel = new javax.swing.JLabel();
        mediaLabel1 = new javax.swing.JLabel();
        mostrarGrafico = new javax.swing.JButton();
        mostrarStats = new javax.swing.JButton();
        AnoStatsLbl = new javax.swing.JLabel();
        anoStats = new javax.swing.JTextField();
        listNone = new javax.swing.JButton();
        livroMais = new javax.swing.JLabel();
        dvdMais = new javax.swing.JLabel();
        livroPlus = new javax.swing.JButton();
        dvdPlus = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        euMenu = new javax.swing.JMenu();
        myData = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        limparCampos = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        buttonGroup1.add(isLivro);
        isLivro.setSelected(true);
        isLivro.setText("Livro");
        isLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isLivroActionPerformed(evt);
            }
        });

        buttonGroup1.add(isDVD);
        isDVD.setText("DVD");
        isDVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isDVDActionPerformed(evt);
            }
        });

        isbnLabel.setText("ISBN:");

        anoLabel.setText("Ano de publicação:");

        cotaLabel.setText("Cota:");

        editoraLabel.setText("Editora:");

        autoresLabel.setText("Autores:");

        tituloLabel.setText("Título:");

        anoPub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anoPubKeyReleased(evt);
            }
        });

        cota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cotaKeyReleased(evt);
            }
        });

        procurarArtigo.setText("Procurar");
        procurarArtigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurarArtigoActionPerformed(evt);
            }
        });

        addArtigo.setText("Adicionar");
        addArtigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArtigoActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo de artigo:");

        javax.swing.GroupLayout artigosTabLayout = new javax.swing.GroupLayout(artigosTab);
        artigosTab.setLayout(artigosTabLayout);
        artigosTabLayout.setHorizontalGroup(
            artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, artigosTabLayout.createSequentialGroup()
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(artigosTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(procurarArtigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addArtigo))
                    .addGroup(artigosTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloLabel)
                            .addComponent(editoraLabel)
                            .addComponent(autoresLabel)
                            .addComponent(isbnLabel)
                            .addComponent(cotaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anoLabel)
                            .addGroup(artigosTabLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(56, 56, 56)
                                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(artigosTabLayout.createSequentialGroup()
                                        .addComponent(isLivro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(isDVD))
                                    .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(isbn, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                        .addComponent(editora, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(autores)
                                        .addComponent(cota, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(titulo, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(artigosTabLayout.createSequentialGroup()
                                            .addComponent(anoPub, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))))))))
                .addGap(20, 20, 20))
        );
        artigosTabLayout.setVerticalGroup(
            artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, artigosTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isDVD)
                    .addComponent(isLivro)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editoraLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(autores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoresLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cotaLabel)
                    .addComponent(cota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbnLabel)
                    .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anoPub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(artigosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(procurarArtigo)
                    .addComponent(addArtigo))
                .addGap(25, 25, 25))
        );

        requisitadosTab.addTab("Artigos", artigosTab);

        usersTab.setEnabled(false);
        usersTab.setFocusable(false);

        buttonGroup2.add(isAdmin);
        isAdmin.setSelected(true);
        isAdmin.setText("Administrador");
        isAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isAdminActionPerformed(evt);
            }
        });

        buttonGroup2.add(isLeitor);
        isLeitor.setText("Leitor");
        isLeitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isLeitorActionPerformed(evt);
            }
        });

        slash1.setText("/");

        dataLabel.setText("Data de Nascimento:");

        telefoneLabel.setText("Telefone:");

        moradaLabel.setText("Morada");

        categoriaLabel.setText("Categoria:");

        emailLabel.setText("E-mail:");

        telefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telefoneKeyReleased(evt);
            }
        });

        categoria.setMinimumSize(new java.awt.Dimension(10, 20));
        categoria.setPreferredSize(new java.awt.Dimension(10, 20));

        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idKeyReleased(evt);
            }
        });

        nomeLabel.setText("Nome:");

        ano.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anoKeyReleased(evt);
            }
        });

        mes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mesKeyReleased(evt);
            }
        });

        dia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diaKeyReleased(evt);
            }
        });

        slash2.setText("/");

        idLabel.setText("ID:");

        categoriaCheck.setText("jCheckBox1");

        procurarUser.setText("Procurar");
        procurarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procurarUserActionPerformed(evt);
            }
        });

        addUser.setText("Adicionar");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        buttonGroup3.add(isAluno);
        isAluno.setText("Aluno");

        buttonGroup3.add(isProf);
        isProf.setText("Professor");

        jLabel6.setText("Tipo de utilizador:");

        javax.swing.GroupLayout usersTabLayout = new javax.swing.GroupLayout(usersTab);
        usersTab.setLayout(usersTabLayout);
        usersTabLayout.setHorizontalGroup(
            usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usersTabLayout.createSequentialGroup()
                        .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeLabel)
                            .addComponent(moradaLabel)
                            .addComponent(telefoneLabel)
                            .addComponent(emailLabel)
                            .addGroup(usersTabLayout.createSequentialGroup()
                                .addComponent(categoriaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(categoriaCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dataLabel)
                            .addComponent(idLabel))
                        .addGap(18, 18, 18)
                        .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersTabLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(procurarUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addUser))
                            .addComponent(nome)
                            .addComponent(morada)
                            .addComponent(telefone)
                            .addGroup(usersTabLayout.createSequentialGroup()
                                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(usersTabLayout.createSequentialGroup()
                                        .addComponent(isProf)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(isAluno)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(usersTabLayout.createSequentialGroup()
                                        .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(usersTabLayout.createSequentialGroup()
                                                .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(slash2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(id))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(slash1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(usersTabLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38)
                        .addComponent(isAdmin)
                        .addGap(18, 18, 18)
                        .addComponent(isLeitor)))
                .addGap(20, 20, 20))
        );
        usersTabLayout.setVerticalGroup(
            usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isAdmin)
                    .addComponent(isLeitor)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(morada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moradaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(isProf)
                        .addComponent(isAluno))
                    .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoriaLabel)
                        .addComponent(categoriaCheck)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slash1)
                    .addComponent(slash2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(usersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addUser)
                    .addComponent(procurarUser))
                .addGap(25, 25, 25))
        );

        requisitadosTab.addTab("Utilizadores", usersTab);

        jLabel2.setText("Password anterior:");

        jLabel3.setText("Nova password:");

        jLabel4.setText("Repita a nova password:");

        mudarPass.setText("OK");
        mudarPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mudarPassActionPerformed(evt);
            }
        });

        errorLbl.setForeground(new java.awt.Color(255, 0, 0));
        errorLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout passTabLayout = new javax.swing.GroupLayout(passTab);
        passTab.setLayout(passTabLayout);
        passTabLayout.setHorizontalGroup(
            passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passTabLayout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(passTabLayout.createSequentialGroup()
                        .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(oldPass, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmPass, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(mudarPass, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        passTabLayout.setVerticalGroup(
            passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(25, 25, 25)
                .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(25, 25, 25)
                .addGroup(passTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addComponent(errorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mudarPass)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        requisitadosTab.addTab("Mudar password", passTab);

        reqsTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                reqsTabComponentShown(evt);
            }
        });

        listaReqs.setViewportView(atrasadas);

        javax.swing.GroupLayout reqsTabLayout = new javax.swing.GroupLayout(reqsTab);
        reqsTab.setLayout(reqsTabLayout);
        reqsTabLayout.setHorizontalGroup(
            reqsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listaReqs, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );
        reqsTabLayout.setVerticalGroup(
            reqsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listaReqs, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        requisitadosTab.addTab("Requisições Atrasadas", reqsTab);

        requisitados.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                requisitadosComponentShown(evt);
            }
        });

        jScrollPane1.setViewportView(requisitadosList);

        javax.swing.GroupLayout requisitadosLayout = new javax.swing.GroupLayout(requisitados);
        requisitados.setLayout(requisitadosLayout);
        requisitadosLayout.setHorizontalGroup(
            requisitadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );
        requisitadosLayout.setVerticalGroup(
            requisitadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        requisitadosTab.addTab("Artigos requisitados", requisitados);

        mesStatsLbl.setText("Mês (número):");

        mesStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesStatsActionPerformed(evt);
            }
        });
        mesStats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mesStatsKeyReleased(evt);
            }
        });

        mostrarGrafico.setText("Visualizar gráfico");
        mostrarGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarGraficoActionPerformed(evt);
            }
        });

        mostrarStats.setText("OK");
        mostrarStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarStatsActionPerformed(evt);
            }
        });

        AnoStatsLbl.setText("Ano:");

        anoStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoStatsActionPerformed(evt);
            }
        });

        listNone.setText("Não requisitados este mês");
        listNone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listNoneActionPerformed(evt);
            }
        });

        livroPlus.setText("Ver+");
        livroPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livroPlusActionPerformed(evt);
            }
        });

        dvdPlus.setText("Ver+");
        dvdPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dvdPlusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statsTabLayout = new javax.swing.GroupLayout(statsTab);
        statsTab.setLayout(statsTabLayout);
        statsTabLayout.setHorizontalGroup(
            statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsTabLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(statsTabLayout.createSequentialGroup()
                        .addComponent(listNone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mostrarGrafico))
                    .addGroup(statsTabLayout.createSequentialGroup()
                        .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(statsTabLayout.createSequentialGroup()
                                .addComponent(mesStatsLbl)
                                .addGap(18, 18, 18)
                                .addComponent(mesStats, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(AnoStatsLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoStats, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mediaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mediaLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dvdMais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(livroMais, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dvdPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(livroPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mostrarStats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        statsTabLayout.setVerticalGroup(
            statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsTabLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mesStatsLbl)
                    .addComponent(mesStats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnoStatsLbl)
                    .addComponent(anoStats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarStats))
                .addGap(18, 18, 18)
                .addComponent(mesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mediaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mediaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(livroMais, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(livroPlus))
                .addGap(18, 18, 18)
                .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statsTabLayout.createSequentialGroup()
                        .addComponent(dvdMais, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(statsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listNone)
                            .addComponent(mostrarGrafico)))
                    .addComponent(dvdPlus))
                .addContainerGap())
        );

        mesLabel.getAccessibleContext().setAccessibleName("Estatisticas");

        requisitadosTab.addTab("Estatísticas", statsTab);

        euMenu.setText("Eu");

        myData.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        myData.setText("Os Meus Dados");
        myData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myDataActionPerformed(evt);
            }
        });
        euMenu.add(myData);

        logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        euMenu.add(logout);

        jMenuBar1.add(euMenu);

        limparCampos.setText("Limpar");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Limpar Campos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        limparCampos.add(jMenuItem1);

        jMenuBar1.add(limparCampos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(requisitadosTab)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(requisitadosTab))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private Utilizador readUser(ArrayList<String> params) {
        /**Adicionar parâmetros ao array params consoante caixas selecionadas**/
		/**Guardar atributos lidos no user novo**/
		
		Utilizador novo;
		
		/**Determinar tipo de utilizador e ler parâmetros de acordo**/
		if (this.isLeitor.isSelected()) {
			novo = new Leitor();
			if (this.categoriaCheck.isSelected()) {
				params.add("tipo");
				((Leitor)novo).setTipo(this.isProf.isSelected());
			}
		}
		else {
			novo = new Admin();
			if (!this.categoria.getText().equals("")) {
				params.add("categoria");
				((Admin)novo).setCategoria(this.categoria.getText());
			}
		}
		
		/**Se tentar procurar pelo ID só será lido o utilizador por id
		* ignorando o resto**/
		if (!"".equals(this.id.getText())) {
			params.clear();
			try {
				novo.setnInterno(Integer.parseInt(this.id.getText()));
				params.add("Id");
				return novo;
			}
			catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Campo ID incorrectamente preenchido", "Erro", JOptionPane.ERROR_MESSAGE);
				return null;
			}
		}
		
		/**Ler restantes parâmetros**/
		if (!this.nome.getText().equals("")) {
			params.add("nome");
			novo.setNome(this.nome.getText());
		}
		if (!this.morada.getText().equals("")) {
			params.add("morada");
			novo.setMorada(this.morada.getText());
		}
		if (!this.telefone.getText().equals("")) {
			params.add("telefone");
			novo.setTelefone(this.telefone.getText());
		}
		if (!this.email.getText().equals("")) {
			params.add("email");
			novo.setEmail(this.email.getText());
		}
		
		/**Tentar ler data de nascimento**/
		if ((!"".equals(this.ano.getText()))&&(!"".equals(this.mes.getText()))&&(!"".equals(this.dia.getText()))) {
			try {
				Calendario aux = new Calendario(Integer.parseInt(this.dia.getText()), Integer.parseInt(this.mes.getText()), Integer.parseInt(this.ano.getText()));
				novo.setDataNascimento(aux);
				params.add("data");
			}
			catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Campo data incorrectamente preenchido", "Erro", JOptionPane.ERROR_MESSAGE);
				params.clear();
				return null;
			}
		}
		return novo;
	}
	
	private Artigo readArtigo (ArrayList<String> params) {
		Artigo novo;
		
		/**Determinar tipo de artigo e ler parâmetros de acordo**/
		if (this.isDVD.isSelected()) {
			novo = new DVD();
			if (!this.autores.getText().equals("")) {
				params.add("realizador");
				((DVD)novo).setRealizador(this.autores.getText());
			}
			if (!this.cota.getText().equals("")) {//o campo cota é a duração para um DVD
				try {
					((DVD)novo).setDuracao(Integer.parseInt(this.cota.getText()));
					params.add("duracao");
				}
				catch (NumberFormatException e) {
					JOptionPane.showMessageDialog(null, "Campo duração incorrectamente preenchido", "Erro", JOptionPane.ERROR_MESSAGE);
					params.clear();
					return null;
				}
			}
		}
		
		else {
			novo = new Livro();
			
			/**Ler autores separados por ";"**/
			if (!this.autores.getText().equals("")) {
				params.add("autores");
				ArrayList <Autor> autoresList = new ArrayList<>();
				String temp = this.autores.getText();
				String[] lista = temp.split(";");
				for (String lista1 : lista)
					autoresList.add(new Autor(lista1));
				((Livro)novo).setAutores(autoresList);
			}
			
			if (!this.isbn.getText().equals("")) {
				params.add("isbn");
				((Livro)novo).setIsbn(this.isbn.getText());
			}
			if (!this.cota.getText().equals("")) {
				params.add("cota");
				((Livro)novo).setCota(this.cota.getText());
			}
		}
		
		/**Ler restantes parâmetros**/
		if (!this.titulo.getText().equals("")) {
			params.add("titulo");
			novo.setTitulo(this.titulo.getText());
		}
		if (!this.editora.getText().equals("")) {
			params.add("editora");
			novo.setEditora(this.editora.getText());
		}
		if (!this.anoPub.getText().equals("")) {
			try {
				novo.setAnoPublicacao(Integer.parseInt(this.anoPub.getText()));
				params.add("ano");
				return novo;
			}
			catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Campo Ano incorrectamente preenchido", "Erro", JOptionPane.ERROR_MESSAGE);
				params.clear();
				return null;
			}
		}
		return novo;
	}
	
    private void myDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myDataActionPerformed
        /**Mostrar dados do utilizador actual**/
		Display j  = new Display(user, user, dados);
		j.setVisible(true);
		this.frames.add(j);
    }//GEN-LAST:event_myDataActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        this.dispose();
        for(int i=0;i<frames.size();i++){
            frames.get(i).dispose();
        }
        Main.logwindow.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void addArtigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addArtigoActionPerformed
        ArrayList<String> params = new ArrayList<>();
        
		/**Ler artigo**/
		Artigo novo = readArtigo(params);
		
		/**Verificar se todos os campos estão preenchidos**/
        if (((params.size()<5)&&(novo instanceof Livro)) ||((params.size()<4)&&(novo instanceof DVD)))
			JOptionPane.showMessageDialog(null, "Tem de preencher todos os campos", "Erro", JOptionPane.ERROR_MESSAGE);
		else {
			/**Adicionar artigo**/
			if (((Admin)this.user).addArtigo(dados, novo)!=null)
				JOptionPane.showMessageDialog(null, "Artigo adicionado com sucesso", "Confirmado", JOptionPane.INFORMATION_MESSAGE);
			else
				JOptionPane.showMessageDialog(null, "Artigo não adicionado", "Erro", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_addArtigoActionPerformed

    private void procurarArtigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurarArtigoActionPerformed
        ArrayList<String> params = new ArrayList<>();
		
		/**Ler artigo e parâmetros a comparar**/
		Artigo novo = readArtigo(params);
		String[] aux = new String[params.size()];
        for (int i = 0; i<params.size();i++)
            aux[i] = params.get(i);
        
		/**Abrir nova janela com os resultados da procura**/
		PickFromList j = new PickFromList((user.procurarArtigos(dados.get(1), dados.get(0), novo, aux)).toArray(), user, dados);
        j.setVisible(true);
	this.frames.add(j);
    }//GEN-LAST:event_procurarArtigoActionPerformed

    private void isDVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isDVDActionPerformed
        /**Mudar campos para o tipo de Artigo DVD**/
	this.autoresLabel.setText("Realizador");
        this.cotaLabel.setText("Duração");
        this.isbnLabel.setVisible(false);
        this.isbn.setVisible(false);
    }//GEN-LAST:event_isDVDActionPerformed

    private void isLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isLivroActionPerformed
        /**Mudar campos para o tipo de Artigo Livro**/
		this.autoresLabel.setText("Autores");
        this.cotaLabel.setText("Cota");
        this.isbnLabel.setVisible(true);
        this.isbn.setVisible(true);
    }//GEN-LAST:event_isLivroActionPerformed

    private void anoPubKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anoPubKeyReleased
        checkNumbers(this.anoPub, 1000, 2050);
    }//GEN-LAST:event_anoPubKeyReleased

    private void cotaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cotaKeyReleased
        if (this.isDVD.isSelected())
			checkNumbers(this.cota, 1, 360);
    }//GEN-LAST:event_cotaKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        /**Limpar texto de todos os campos**/
		this.ano.setText("");
		this.anoPub.setText("");
		this.autores.setText("");
		this.categoria.setText("");
		this.cota.setText("");
		this.dia.setText("");
		this.editora.setText("");
		this.email.setText("");
		this.email.setText("");
		this.id.setText("");
		this.isbn.setText("");
		this.mes.setText("");
		this.morada.setText("");
		this.nome.setText("");
		this.telefone.setText("");
		this.titulo.setText("");
		this.mesStats.setText("");
		this.anoStats.setText("");
		this.oldPass.setText("");
		this.newPass.setText("");
		this.confirmPass.setText("");
		showStats();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        ArrayList<String> params = new ArrayList<>();
        /**Ler utilizador**/
		Utilizador novo = readUser(params);
        /**Verifica se todos os campos necessários foram preenchidos**/
		if (params.size()<6)
			JOptionPane.showMessageDialog(null, "Tem de preencher todos os campos", "Erro", JOptionPane.ERROR_MESSAGE);
        else {
            if (novo instanceof Leitor) 
				((Leitor)novo).setTipo(this.isProf.isSelected());
			/**Pedir palavra-passe**/
            JPasswordField pwd = new JPasswordField(10);
            JOptionPane.showConfirmDialog(null, pwd,"Insira uma palavra passe",JOptionPane.OK_CANCEL_OPTION);
            novo.setPalavraChave(new String(pwd.getPassword()));
            if (((Admin)this.user).addUser(dados, novo)!=null)
				JOptionPane.showMessageDialog(null, "Utilizador adicionado com sucesso", "Confirmado", JOptionPane.INFORMATION_MESSAGE);
            else
				JOptionPane.showMessageDialog(null, "Utilizador não adicionado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addUserActionPerformed

    private void procurarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procurarUserActionPerformed
        ArrayList<String> params = new ArrayList<>();
        Utilizador novo = readUser(params);
        /**Enviar dados para janela de escolha de uma lista**/
        String[] aux = new String[params.size()];
        for (int i = 0; i<params.size();i++)
            aux[i] = params.get(i);
        PickFromList j = new PickFromList((((Admin)user).procurarUtilizadores(dados.get(4), dados.get(5), novo, aux)).toArray(), user, dados);
        j.setVisible(true);
	this.frames.add(j);
    }//GEN-LAST:event_procurarUserActionPerformed

    private void diaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diaKeyReleased
        checkNumbers(this.dia, 1, 31);
    }//GEN-LAST:event_diaKeyReleased

    private void mesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mesKeyReleased
        checkNumbers(this.mes, 1, 12);
    }//GEN-LAST:event_mesKeyReleased

    private void anoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anoKeyReleased
        checkNumbers(this.ano, 1900, 2013);
    }//GEN-LAST:event_anoKeyReleased

    private void idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyReleased
        checkNumbers(this.id, 0, 0);
    }//GEN-LAST:event_idKeyReleased

    private void telefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefoneKeyReleased
        checkNumbers(this.telefone, 0, 0);
    }//GEN-LAST:event_telefoneKeyReleased

    private void isLeitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isLeitorActionPerformed
        /**Mudar campos para tipo de Utilizador Leitor**/
		this.categoriaLabel.setText("Tipo");
        this.categoria.setVisible(false);
        this.categoriaCheck.setVisible(true);
        this.isAluno.setVisible(true);
        this.isProf.setVisible(true);
    }//GEN-LAST:event_isLeitorActionPerformed

    private void isAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isAdminActionPerformed
        /**Mudar campos para tipo de Utilizador Administrador**/
		this.categoriaLabel.setText("Categoria:");
        this.categoria.setVisible(true);
        this.categoriaCheck.setVisible(false);
        this.isAluno.setVisible(false);
        this.isProf.setVisible(false);
    }//GEN-LAST:event_isAdminActionPerformed
    
    private void showStats(){
		ArrayList stats;
		String[] meses = {"Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho", "Agosto","Setembro","Outubro","Novembro","Dezembro"};
		Admin me = (Admin)this.user;

		double[] x, y;
		try{
			int mes = Integer.parseInt(mesStats.getText());
			int ano = Integer.parseInt(anoStats.getText());

			if ((mes >=1) && (mes <= 12)){
				stats = me.checkStats(mes,ano,this.dados);
				this.mesLabel.setText("Estatísticas para "+ meses[mes-1] + " de " + ano + ":");

				if  ((double)stats.get(1) == 0) { //Não houve nenhuma requisição
					this.mediaLabel.setText("Mês sem requisições.");
					this.mostrarGrafico.setVisible(false);
					this.listNone.setVisible(false);
					this.livroPlus.setVisible(false);
					this.dvdPlus.setVisible(false);
					this.mediaLabel1.setText("");
					this.livroMais.setText("");
					this.dvdMais.setText("");
					return;
				}

				y = (double[])stats.get(0);
				x = new double[y.length];
				for (int i=1;i<=y.length;i++) x[i-1]=i;

				this.mostrarGrafico.setVisible(true);
				this.listNone.setVisible(true);

				this.grafico = new Grafico(this.mesLabel.getText(),x,y);
				this.mediaLabel.setText("Número médio de requisições: " + String.format("%.4g%n",stats.get(1)));
				this.mediaLabel1.setText("Dia com mais requisições: " + stats.get(2));

				if (stats.get(4)!=null) {
					this.livroMais.setText("Livro mais requisitado: "+((Artigo)stats.get(4)).getTitulo());
					this.livroPlus.setVisible(true);
				}
				else {
					this.livroMais.setText("");
					this.livroPlus.setVisible(false);
				}
				if (stats.get(5)!=null) {
					this.dvdMais.setText("DVD mais requisitado: "+((Artigo)stats.get(5)).getTitulo());
					this.dvdPlus.setVisible(true);
				}
				else {
					this.livroMais.setText("");
					this.livroPlus.setVisible(false);
				}
			}
		}
		catch(NumberFormatException e){
			this.mostrarGrafico.setVisible(false);
			this.listNone.setVisible(false);
			this.livroPlus.setVisible(false);
			this.dvdPlus.setVisible(false);
			this.mediaLabel1.setText("");
			this.livroMais.setText("");
			this.dvdMais.setText("");
			this.mediaLabel.setText("");
			this.mesLabel.setText("");
		}
	}
    
    private void mudarPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mudarPassActionPerformed
        String oldPass = new String(this.oldPass.getPassword());
        String newPass = new String(this.newPass.getPassword());
        if (newPass.equals(new String(this.confirmPass.getPassword()))) {
            if (user.changePass(oldPass, newPass)) {
                this.errorLbl.setText("Password alterada com sucesso.");
                this.errorLbl.setForeground(Color.green);
            }
            else {
                this.errorLbl.setText("Password antiga errada.");
                this.errorLbl.setForeground(Color.red);
            }
        }
        else {
            this.errorLbl.setText("Passwords novas não correspondem.");
            this.errorLbl.setForeground(Color.red);
        }
    }//GEN-LAST:event_mudarPassActionPerformed

    private void reqsTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_reqsTabComponentShown
        if (user instanceof Leitor) return;
		DefaultListModel model = new DefaultListModel();
		final ArrayList<Requisicao> late = ((Admin)user).checkAtrasados(new Calendario(), dados.get(3));
		for (Object objecto : late)
				model.addElement(objecto.toString());
		this.atrasadas.setModel(model);
		
		atrasadas.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				JList list = (JList)evt.getSource();
				if (evt.getClickCount() == 2) {
					int index = list.locationToIndex(evt.getPoint());
					if ((index>=0)&&(index<late.size())) {
						DisplayReq disp;
						disp = new DisplayReq(late.get(index), user, dados);
						disp.setVisible(true);
					}
				}
			}
		});
    }//GEN-LAST:event_reqsTabComponentShown

    private void mostrarStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarStatsActionPerformed
        showStats();
    }//GEN-LAST:event_mostrarStatsActionPerformed

    private void mostrarGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarGraficoActionPerformed
        this.grafico.setVisible(true);
	this.frames.add(this.grafico);
    }//GEN-LAST:event_mostrarGraficoActionPerformed

    private void mesStatsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mesStatsKeyReleased
        checkNumbers(this.mesStats, 1, 12);
    }//GEN-LAST:event_mesStatsKeyReleased

    private void mesStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesStatsActionPerformed
        showStats();
    }//GEN-LAST:event_mesStatsActionPerformed

    private void anoStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoStatsActionPerformed
        showStats();
    }//GEN-LAST:event_anoStatsActionPerformed

    private void listNoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listNoneActionPerformed
        try{
			int mes = Integer.parseInt(mesStats.getText());
			int ano = Integer.parseInt(anoStats.getText());
			ArrayList<Artigo> none = (ArrayList<Artigo>)((Admin)this.user).checkStats(mes,ano,this.dados).get(3);
			PickFromList nenhuma = new PickFromList(none.toArray(), user, dados);
			nenhuma.setVisible(true);
			this.frames.add(nenhuma);
		}
		catch(NumberFormatException e){}
    }//GEN-LAST:event_listNoneActionPerformed

    private void livroPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livroPlusActionPerformed
        try{
			int mes = Integer.parseInt(mesStats.getText());
			int ano = Integer.parseInt(anoStats.getText());
			Livro livro = (Livro)((Admin)this.user).checkStats(mes,ano,this.dados).get(4);
			DisplayArtigo mLivro = new DisplayArtigo(livro, user, dados);
			mLivro.setVisible(true);
			this.frames.add(mLivro);
		}
		catch(NumberFormatException e){}
    }//GEN-LAST:event_livroPlusActionPerformed

    private void dvdPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dvdPlusActionPerformed
        try{
			int mes = Integer.parseInt(mesStats.getText());
			int ano = Integer.parseInt(anoStats.getText());
			DVD dvd = (DVD)((Admin)this.user).checkStats(mes,ano,this.dados).get(5);
			DisplayArtigo mDvd = new DisplayArtigo(dvd, user, dados);
			mDvd.setVisible(true);
			this.frames.add(mDvd);
		}
		catch(NumberFormatException e){}
    }//GEN-LAST:event_dvdPlusActionPerformed

    private void requisitadosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_requisitadosComponentShown
        if (user instanceof Leitor) return;
		final ArrayList<Artigo> now = ((Admin)user).actualmenteRequisitados(dados);
		DefaultListModel model = new DefaultListModel();
		for (Object objecto : now)
				model.addElement(objecto.toString());
		this.requisitadosList.setModel(model);
		
		requisitadosList.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				JList list = (JList)evt.getSource();
				if (evt.getClickCount() == 2) {
					int index = list.locationToIndex(evt.getPoint());
					if ((index>=0)&&(index<now.size())) {
						DisplayArtigo disp;
						disp = new DisplayArtigo(now.get(index), user, dados);
						disp.setVisible(true);
					}
				}
			}
		});
    }//GEN-LAST:event_requisitadosComponentShown

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

	private void checkNumbers(JTextField handler, int min, int max) {
		if (handler.getText().length()!=0)
			try {
				handler.setBackground(Color.white);
				int aux = Integer.parseInt(handler.getText());
				if (max!=0)
					if ((aux>max)||(aux<min))
						handler.setBackground(Color.red);
			}
			catch (NumberFormatException e) {
				handler.setBackground(Color.red);
			}
		else handler.setBackground(Color.white);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnoStatsLbl;
    private javax.swing.JButton addArtigo;
    private javax.swing.JButton addUser;
    private javax.swing.JTextField ano;
    private javax.swing.JLabel anoLabel;
    private javax.swing.JTextField anoPub;
    private javax.swing.JTextField anoStats;
    private javax.swing.JPanel artigosTab;
    private javax.swing.JList atrasadas;
    private javax.swing.JTextField autores;
    private javax.swing.JLabel autoresLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField categoria;
    private javax.swing.JCheckBox categoriaCheck;
    private javax.swing.JLabel categoriaLabel;
    private javax.swing.JPasswordField confirmPass;
    private javax.swing.JTextField cota;
    private javax.swing.JLabel cotaLabel;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JTextField dia;
    private javax.swing.JLabel dvdMais;
    private javax.swing.JButton dvdPlus;
    private javax.swing.JTextField editora;
    private javax.swing.JLabel editoraLabel;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorLbl;
    private javax.swing.JMenu euMenu;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idLabel;
    private javax.swing.JRadioButton isAdmin;
    private javax.swing.JRadioButton isAluno;
    private javax.swing.JRadioButton isDVD;
    private javax.swing.JRadioButton isLeitor;
    private javax.swing.JRadioButton isLivro;
    private javax.swing.JRadioButton isProf;
    private javax.swing.JTextField isbn;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu limparCampos;
    private javax.swing.JButton listNone;
    private javax.swing.JScrollPane listaReqs;
    private javax.swing.JLabel livroMais;
    private javax.swing.JButton livroPlus;
    private javax.swing.JMenuItem logout;
    private javax.swing.JLabel mediaLabel;
    private javax.swing.JLabel mediaLabel1;
    private javax.swing.JTextField mes;
    private javax.swing.JLabel mesLabel;
    private javax.swing.JTextField mesStats;
    private javax.swing.JLabel mesStatsLbl;
    private javax.swing.JTextField morada;
    private javax.swing.JLabel moradaLabel;
    private javax.swing.JButton mostrarGrafico;
    private javax.swing.JButton mostrarStats;
    private javax.swing.JButton mudarPass;
    private javax.swing.JMenuItem myData;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JTextField nome;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JPasswordField oldPass;
    private javax.swing.JPanel passTab;
    private javax.swing.JButton procurarArtigo;
    private javax.swing.JButton procurarUser;
    private javax.swing.JPanel reqsTab;
    private javax.swing.JPanel requisitados;
    private javax.swing.JList requisitadosList;
    private javax.swing.JTabbedPane requisitadosTab;
    private javax.swing.JLabel slash1;
    private javax.swing.JLabel slash2;
    private javax.swing.JPanel statsTab;
    private javax.swing.JTextField telefone;
    private javax.swing.JLabel telefoneLabel;
    private javax.swing.JTextField titulo;
    private javax.swing.JLabel tituloLabel;
    private javax.swing.JPanel usersTab;
    // End of variables declaration//GEN-END:variables

}